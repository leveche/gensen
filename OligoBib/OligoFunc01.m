(***********************************************************************
This file was generated automatically by the Mathematica front end.
It contains Initialization cells from a Notebook file, which typically
will have the same name as this file except ending in ".nb" instead of
".m".

This file is intended to be loaded into the Mathematica kernel using
the package loading commands Get or Needs.  Doing so is equivalent to
using the Evaluate Initialization Cells menu command in the front end.

DO NOT EDIT THIS FILE.  This entire file is regenerated automatically 
each time the parent Notebook file is saved in the Mathematica front end.
Any changes you make to this file will be overwritten.
***********************************************************************)



<<Statistics`DescriptiveStatistics`

PrettyPrint[x_]:=Print[HoldForm[x]," = ",x];
SetAttributes[PrettyPrint, HoldAll]

\!\(oligoScore[
      o_] := \[Sum]\+\(j = First[\(Q\_+\)]\)\%\(Last[\(Q\_+\)]\)match\
\[LeftDoubleBracket]j, 
          o\[RightDoubleBracket] - \[Sum]\+\(j = \
First[\(Q\_-\)]\)\%\(Last[\(Q\_-\)]\)match\[LeftDoubleBracket]j, 
          o\[RightDoubleBracket]\)

\!\(\(match = Table[0, {j, Last[\(Q\_-\)]}, {k, NumOK}];\)\n
  \(Map[k = #; \n\t
      match\[LeftDoubleBracket]Random[
            Integer, {First[\(Q\_+\)], Last[\(Q\_+\)]}], 
          k\[RightDoubleBracket] = 
        1; \n\t\(Do[\n\t\t\tmatch\[LeftDoubleBracket]
                Random[Integer, {First[\(Q\_+\)], Last[\(Q\_-\)]}], 
                k\[RightDoubleBracket] = Random[Integer], {12}];\)\n\t\t &, 
      O\_K];\)\n
  \(sortedOk = \ Sort[O\_K, oligoScore[#1] > oligoScore[#2] &];\)\n
  oligoScore[First[sortedOk]]\n
  \(For[j = First[\(Q\_+\)], 
      j \[LessEqual] 
        Last[\(Q\_-\)], \(j++\), \n\t\ \ \(If[
          match\[LeftDoubleBracket]j, 
              First[sortedOk]\[RightDoubleBracket] \[Equal] 
            0, \n\t\t\tmatch\[LeftDoubleBracket]j, 
              First[sortedOk]\[RightDoubleBracket] = 
            1; \n\t\t\ \ Break[];\n\t\t];\)\n\t];\)\n
  \(For[j = First[\(Q\_+\)], 
      j \[LessEqual] 
        Last[\(Q\_-\)], \(j++\), \n\t\ \ \(If[
          match\[LeftDoubleBracket]j, 
              First[sortedOk]\[RightDoubleBracket] \[Equal] 
            0, \n\t\t\tmatch\[LeftDoubleBracket]j, 
              First[sortedOk]\[RightDoubleBracket] = 
            1; \n\t\t\ \ Break[];\n\t\t];\)\n\t];\)\n
  oligoScore[First[sortedOk]]\n
  \(For[i = 1, i \[LessEqual] 4, \(i++\), \n\t
      oTemp = Random[Integer, {First[O\_K], Last[O\_K]}]; \n\t
      For[j = First[\(Q\_+\)], 
        j \[LessEqual] 
          Last[\(Q\_-\)], \(j++\), \n\t\t\(match\[LeftDoubleBracket]j, 
              sortedOk\[LeftDoubleBracket]
                oTemp\[RightDoubleBracket]\[RightDoubleBracket] = 
            match\[LeftDoubleBracket]j, 
              First[sortedOk]\[RightDoubleBracket];\)\n\t];\n];\)\)





\!\(\(Match[SeqList_, OligoList_] := Block[\({}\)\(,\)\n\t\t\n];\)\n
  \(MatchList[SeqList_, OligoList_] := 
      Block[{o}, \n\t\tmatchList = {}; \n\t\tMap[
          o = #; \n\t\t\t\(matchList = 
              matchList\  \[Union] \ 
                Select[SeqList, 
                  match\[LeftDoubleBracket]#1, o\[RightDoubleBracket] == 
                      1 &];\n\t\t\t\  &\), \ 
          OligoList]; \n\t\tmatchList\n\t\t];\)\n
  \(MatchCount[SeqList_, OligoList_] := 
      Block[{}, \n\t\tLength[MatchList[SeqList, OligoList]]\n\t\t];\)\n
  \(Sensitivity[SeqList_, OligoList_] := 
      Block[{}, \n\t\tMatchCount[SeqList, OligoList]\/Length[SeqList] // 
          N\n\t\t];\)\n (*\n\t\t\ Sensitivit\[ADoubleDot]t\ der\ Komplement - 
      Menge\ bei\n\t\t\tinvertiertem\ Test\ \n\t*) \n
  \t\(Specifity[SeqList_, OligoList_] := 
      1 - Sensitivity[Complement[\(Q\_+\) \[Union] \(Q\_-\), SeqList], 
          OligoList];\)\n\n
  \(Uebereinstimmung[OligoList_] := 
      Block[{}, \n\t\t (*\ 
          erstmal\ nicht\ allgemeing\[UDoubleDot]ltig\ \(implementiert!\)\ \
*) \n\t\t\(MatchCount[\(Q\_+\), OligoList] + MatchCount[\(Q\_-\), \
OligoList]\)\/\(\(N\_+\) + \(N\_-\)\) // N\n\t\t];\)\)





\!\(\(maxMatch = 
      Max[Table[
          MatchCount[\(Q\_+\) \[Union] \(Q\_-\), {O\_K\[LeftDoubleBracket]
                i\[RightDoubleBracket]}], {i, First[O\_K], Last[O\_K]}]];\)\n
  ShowHybSignals[OligoList_] := 
    Block[{}, \n
      HybSignalsPlus = 
        Table[\n\t\tMatchCount[\(Q\_+\), {OligoList\[LeftDoubleBracket]
                i\[RightDoubleBracket]}], {i, 1, NumOB}]; \n
      HybSignalsMinus = 
        Table[\n\t\tMatchCount[\(Q\_-\), {OligoList\[LeftDoubleBracket]
                i\[RightDoubleBracket]}], {i, 1, NumOB}]; \n\t
      g1 = ListDensityPlot[Thread[{HybSignalsPlus, HybSignalsPlus}], \ 
          Mesh\  -> \ False, AspectRatio \[Rule] 5, 
          PlotRange \[Rule] {0, maxMatch}, 
          DisplayFunction \[Rule] Identity]; \n\t
      g2 = ListDensityPlot[Thread[{HybSignalsMinus, HybSignalsMinus}], \ 
          Mesh\  -> \ False, AspectRatio \[Rule] 5, 
          PlotRange \[Rule] {0, maxMatch}, 
          DisplayFunction \[Rule] Identity]; \n\t
      g3 = Graphics[{Text[
              ToString[Sensitivity[\(Q\_+\), OligoList]], {1, 0}, {\(-0.5\), 
                0}]}]; \n\tShow[GraphicsArray[{{g1, g2, g3}}]]\n\t]\)

\!\(f[x_, s_, 
      w_] := \[Sum]\+\(j = 1\)\%\(Length[s]\)w\[LeftDoubleBracket]
          j\[RightDoubleBracket]\ match\[LeftDoubleBracket]x, 
          s\[LeftDoubleBracket]j\[RightDoubleBracket]\[RightDoubleBracket]\n
  f2[x_, s_] := 
    N[\[Sum]\+\(j = 1\)\%\(Length[s]\)match\[LeftDoubleBracket]x, 
          s\[LeftDoubleBracket]j\[RightDoubleBracket]\[RightDoubleBracket]]\n
  ff[x_, fs_] := \[Sum]\+\(j = First[O\_K]\)\%\(Last[O\_K]\)fs\
\[LeftDoubleBracket]j, 1\[RightDoubleBracket] 
        fs\[LeftDoubleBracket]j, 
          2\[RightDoubleBracket]\ match\[LeftDoubleBracket]x, 
          j\[RightDoubleBracket]\)



\!\(\(Score3[s_] := Sensitivity[\(Q\_+\), s] + Specifity[\(Q\_+\), s];\)\)

















